# ===========================================
# Wandr - Smart Location Discovery App
# ===========================================
# Frontend (Next.js) + Backend API (Hono.js)
# - Frontend: port 3000 (Next.js)
# - Backend API: port 8000 (Hono.js)
# - Database: PostgreSQL with pgvector (internal)
# ===========================================

# Upstream definitions
upstream wandr_frontend {
    server wandr-web:3000;
}

upstream wandr_backend {
    server wandr-backend:8000;
}

# HTTP to HTTPS redirect (when SSL is configured)
server {
    listen 80;
    server_name wandr.online www.wandr.online;
    return 301 https://$host$request_uri;
}

# Main Wandr Server
server {
    # listen 80;  # Commented because of redirect above
    listen 443 ssl http2;
    server_name wandr.online www.wandr.online;

    # Limits
    client_max_body_size 10M;
    client_body_timeout 60s;
    client_header_timeout 60s;

    # SSL configuration
    ssl_certificate /etc/nginx/ssl/wandr.crt;
    ssl_certificate_key /etc/nginx/ssl/wandr.key;
    include /etc/nginx/ssl/options-ssl-nginx.conf;

    # Logs
    access_log /var/log/nginx/wandr.access.log;
    error_log /var/log/nginx/wandr.error.log;

    # Security headers
    add_header X-Frame-Options DENY always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://api.mapbox.com https://pagead2.googlesyndication.com https://www.googletagmanager.com; style-src 'self' 'unsafe-inline' https://api.mapbox.com; img-src 'self' data: https: blob:; font-src 'self' data: https://fonts.gstatic.com; connect-src 'self' https://api.mapbox.com https://*.tiles.mapbox.com https://events.mapbox.com; frame-src https://pagead2.googlesyndication.com;" always;

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "OK\n";
        add_header Content-Type text/plain;
    }

    # Backend API
    location /api/ {
        limit_req zone=api burst=30 nodelay;
        limit_conn conn_limit_per_ip 20;

        proxy_pass http://wandr_backend/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 60s;
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;

        # CORS headers for API
        add_header Access-Control-Allow-Origin $http_origin always;
        add_header Access-Control-Allow-Credentials true always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Accept, Authorization, Cache-Control, Content-Type, X-Requested-With" always;

        # Handle preflight OPTIONS
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin $http_origin always;
            add_header Access-Control-Allow-Credentials true always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Accept, Authorization, Cache-Control, Content-Type, X-Requested-With" always;
            add_header Access-Control-Max-Age 3600 always;
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }
    }

    # Frontend (Next.js)
    location / {
        limit_req zone=general burst=30 nodelay;
        limit_conn conn_limit_per_ip 15;

        proxy_pass http://wandr_frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 60s;
        proxy_connect_timeout 30s;

        # Next.js specific
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Cache static assets
        location ~* \.(?:ico|css|js|gif|jpe?g|png|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://wandr_frontend;
            proxy_cache_valid 200 30d;
            add_header Cache-Control "public, max-age=2592000";
            access_log off;
        }
    }

    # Next.js static files and builds
    location /_next/static/ {
        proxy_pass http://wandr_frontend;
        proxy_cache_valid 200 365d;
        add_header Cache-Control "public, max-age=31536000, immutable";
        access_log off;
    }

    # Sitemap and robots
    location ~ ^/(sitemap\.xml|robots\.txt)$ {
        proxy_pass http://wandr_frontend;
        proxy_cache_valid 200 1h;
        add_header Cache-Control "public, max-age=3600";
    }
}
